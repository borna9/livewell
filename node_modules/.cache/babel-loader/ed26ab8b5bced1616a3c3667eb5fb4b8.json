{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\n\nvar isBrowser = typeof window !== 'undefined';\n\nvar HttpHeaders =\n/** @class */\nfunction () {\n  function HttpHeaders() {\n    this._headersByLowercasedKey = {};\n  }\n\n  HttpHeaders.prototype.set = function (headerKey, headerValue) {\n    var lowercasedKey = headerKey.toLowerCase();\n\n    if (lowercasedKey === 'x-airtable-user-agent') {\n      lowercasedKey = 'user-agent';\n      headerKey = 'User-Agent';\n    }\n\n    this._headersByLowercasedKey[lowercasedKey] = {\n      headerKey: headerKey,\n      headerValue: headerValue\n    };\n  };\n\n  HttpHeaders.prototype.toJSON = function () {\n    var result = {};\n    forEach_1.default(this._headersByLowercasedKey, function (headerDefinition, lowercasedKey) {\n      var headerKey;\n      /* istanbul ignore next */\n\n      if (isBrowser && lowercasedKey === 'user-agent') {\n        // Some browsers do not allow overriding the user agent.\n        // https://github.com/Airtable/airtable.js/issues/52\n        headerKey = 'X-Airtable-User-Agent';\n      } else {\n        headerKey = headerDefinition.headerKey;\n      }\n\n      result[headerKey] = headerDefinition.headerValue;\n    });\n    return result;\n  };\n\n  return HttpHeaders;\n}();\n\nmodule.exports = HttpHeaders;","map":{"version":3,"sources":["../src/http_headers.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAA,SAAA,GAAA,eAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AAEA,IAAM,SAAS,GAAG,OAAO,MAAP,KAAkB,WAApC;;AAEA,IAAA,WAAA;AAAA;AAAA,YAAA;AAGI,WAAA,WAAA,GAAA;AACI,SAAK,uBAAL,GAA+B,EAA/B;AACH;;AAED,EAAA,WAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,SAAJ,EAAe,WAAf,EAA0B;AACtB,QAAI,aAAa,GAAG,SAAS,CAAC,WAAV,EAApB;;AAEA,QAAI,aAAa,KAAK,uBAAtB,EAA+C;AAC3C,MAAA,aAAa,GAAG,YAAhB;AACA,MAAA,SAAS,GAAG,YAAZ;AACH;;AAED,SAAK,uBAAL,CAA6B,aAA7B,IAA8C;AAC1C,MAAA,SAAS,EAAA,SADiC;AAE1C,MAAA,WAAW,EAAA;AAF+B,KAA9C;AAIH,GAZD;;AAcA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACI,QAAM,MAAM,GAAG,EAAf;AACA,IAAA,SAAA,CAAA,OAAA,CAAQ,KAAK,uBAAb,EAAsC,UAAC,gBAAD,EAAmB,aAAnB,EAAgC;AAClE,UAAI,SAAJ;AACA;;AACA,UAAI,SAAS,IAAI,aAAa,KAAK,YAAnC,EAAiD;AAC7C;AACA;AACA,QAAA,SAAS,GAAG,uBAAZ;AACH,OAJD,MAIO;AACH,QAAA,SAAS,GAAG,gBAAgB,CAAC,SAA7B;AACH;;AAED,MAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,gBAAgB,CAAC,WAArC;AACH,KAZD;AAaA,WAAO,MAAP;AACH,GAhBD;;AAiBJ,SAAA,WAAA;AAAC,CAtCD,EAAA;;AAwCA,MAAA,CAAA,OAAA,GAAS,WAAT","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar forEach_1 = __importDefault(require(\"lodash/forEach\"));\nvar isBrowser = typeof window !== 'undefined';\nvar HttpHeaders = /** @class */ (function () {\n    function HttpHeaders() {\n        this._headersByLowercasedKey = {};\n    }\n    HttpHeaders.prototype.set = function (headerKey, headerValue) {\n        var lowercasedKey = headerKey.toLowerCase();\n        if (lowercasedKey === 'x-airtable-user-agent') {\n            lowercasedKey = 'user-agent';\n            headerKey = 'User-Agent';\n        }\n        this._headersByLowercasedKey[lowercasedKey] = {\n            headerKey: headerKey,\n            headerValue: headerValue,\n        };\n    };\n    HttpHeaders.prototype.toJSON = function () {\n        var result = {};\n        forEach_1.default(this._headersByLowercasedKey, function (headerDefinition, lowercasedKey) {\n            var headerKey;\n            /* istanbul ignore next */\n            if (isBrowser && lowercasedKey === 'user-agent') {\n                // Some browsers do not allow overriding the user agent.\n                // https://github.com/Airtable/airtable.js/issues/52\n                headerKey = 'X-Airtable-User-Agent';\n            }\n            else {\n                headerKey = headerDefinition.headerKey;\n            }\n            result[headerKey] = headerDefinition.headerValue;\n        });\n        return result;\n    };\n    return HttpHeaders;\n}());\nmodule.exports = HttpHeaders;\n//# sourceMappingURL=http_headers.js.map"]},"metadata":{},"sourceType":"script"}