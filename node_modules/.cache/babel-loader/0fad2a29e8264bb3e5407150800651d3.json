{"ast":null,"code":"var priorities=[{value:'Low',label:'Low'},{value:'Medium',label:'Medium'},{value:'High',label:'High'},{value:'Time-sensitive',label:'Time-sensitive'},{value:'Daily routine',label:'Daily routine'},{value:'Urgent',label:'Urgent'}];var Airtable=require('airtable');var base=new Airtable({apiKey:'keymrBNLy7tXIfV2H'}).base('apptbLLUUnap2S6oD');var tagList=[];var dbGetTags=function dbGetTags(theTagList){tagList=theTagList;};var getOptions=function getOptions(inputValue){return tagList.filter(function(i){return i.label.toLowerCase().includes(inputValue.toLowerCase());});};var loadOptions=function loadOptions(inputValue,callback){GetTags(base,dbGetTags);setTimeout(function(){callback(getOptions(inputValue));},3000);};function GetTags(base,callbackFn){var recordList=[];base('Tags').select({}).eachPage(function page(records,fetchNextPage){records.forEach(function(record){var newRecord={value:record.id,label:record.get('Name')};recordList.push(newRecord);});fetchNextPage();},function done(err){if(err){console.error(err);return;}else{callbackFn(recordList);}});};export{priorities,base,tagList,loadOptions};","map":{"version":3,"sources":["/Users/bornan/Sync/Documents/dev/hello/react/livewell/src/database.js"],"names":["priorities","value","label","Airtable","require","base","apiKey","tagList","dbGetTags","theTagList","getOptions","inputValue","filter","i","toLowerCase","includes","loadOptions","callback","GetTags","setTimeout","callbackFn","recordList","select","eachPage","page","records","fetchNextPage","forEach","record","newRecord","id","get","push","done","err","console","error"],"mappings":"AAAA,GAAMA,CAAAA,UAAU,CAAG,CAClB,CAAEC,KAAK,CAAE,KAAT,CAAgBC,KAAK,CAAE,KAAvB,CADkB,CAElB,CAAED,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CAFkB,CAGlB,CAAED,KAAK,CAAE,MAAT,CAAiBC,KAAK,CAAE,MAAxB,CAHkB,CAIlB,CAAED,KAAK,CAAE,gBAAT,CAA2BC,KAAK,CAAE,gBAAlC,CAJkB,CAKlB,CAAED,KAAK,CAAE,eAAT,CAA0BC,KAAK,CAAE,eAAjC,CALkB,CAMlB,CAAED,KAAK,CAAE,QAAT,CAAmBC,KAAK,CAAE,QAA1B,CANkB,CAAnB,CASA,GAAMC,CAAAA,QAAQ,CAAGC,OAAO,CAAC,UAAD,CAAxB,CACA,GAAMC,CAAAA,IAAI,CAAG,GAAIF,CAAAA,QAAJ,CAAa,CAACG,MAAM,CAAE,mBAAT,CAAb,EAA4CD,IAA5C,CAAiD,mBAAjD,CAAb,CAEA,GAAIE,CAAAA,OAAO,CAAG,EAAd,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,UAAD,CAAgB,CACjCF,OAAO,CAAGE,UAAV,CACA,CAFD,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAwB,CAC1C,MAAOJ,CAAAA,OAAO,CAACK,MAAR,CAAe,SAAAC,CAAC,QACtBA,CAAAA,CAAC,CAACX,KAAF,CAAQY,WAAR,GAAsBC,QAAtB,CAA+BJ,UAAU,CAACG,WAAX,EAA/B,CADsB,EAAhB,CAAP,CAGA,CAJD,CAMA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACL,UAAD,CAAaM,QAAb,CAA0B,CAC7CC,OAAO,CAACb,IAAD,CAAOG,SAAP,CAAP,CACAW,UAAU,CAAC,UAAM,CAChBF,QAAQ,CAACP,UAAU,CAACC,UAAD,CAAX,CAAR,CACA,CAFS,CAEP,IAFO,CAAV,CAGA,CALD,CAOA,QAASO,CAAAA,OAAT,CAAiBb,IAAjB,CAAuBe,UAAvB,CAAmC,CAClC,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACAhB,IAAI,CAAC,MAAD,CAAJ,CAAaiB,MAAb,CAAoB,EAApB,EACGC,QADH,CACY,QAASC,CAAAA,IAAT,CAAcC,OAAd,CAAuBC,aAAvB,CAAsC,CACjDD,OAAO,CAACE,OAAR,CAAgB,SAASC,MAAT,CAAiB,CAChC,GAAIC,CAAAA,SAAS,CAAG,CAAE5B,KAAK,CAAE2B,MAAM,CAACE,EAAhB,CAAoB5B,KAAK,CAAE0B,MAAM,CAACG,GAAP,CAAW,MAAX,CAA3B,CAAhB,CACAV,UAAU,CAACW,IAAX,CAAgBH,SAAhB,EACA,CAHD,EAIAH,aAAa,GACb,CAPD,CAOG,QAASO,CAAAA,IAAT,CAAcC,GAAd,CAAmB,CACrB,GAAIA,GAAJ,CAAS,CAAEC,OAAO,CAACC,KAAR,CAAcF,GAAd,EAAoB,OAAS,CAAxC,IAA8C,CAC7Cd,UAAU,CAACC,UAAD,CAAV,CACA,CACD,CAXD,EAYA,EAED,OAASrB,UAAT,CAAqBK,IAArB,CAA2BE,OAA3B,CAAoCS,WAApC","sourcesContent":["const priorities = [\n\t{ value: 'Low', label: 'Low' },\n\t{ value: 'Medium', label: 'Medium' },\n\t{ value: 'High', label: 'High' },\n\t{ value: 'Time-sensitive', label: 'Time-sensitive' },\n\t{ value: 'Daily routine', label: 'Daily routine' },\n\t{ value: 'Urgent', label: 'Urgent' },\n];\n\nconst Airtable = require('airtable');\nconst base = new Airtable({apiKey: 'keymrBNLy7tXIfV2H'}).base('apptbLLUUnap2S6oD');\n\nvar tagList = [];\n\nconst dbGetTags = (theTagList) => {\n\ttagList = theTagList;\n};\n\nconst getOptions = (inputValue: string) => {\n\treturn tagList.filter(i =>\n\t\ti.label.toLowerCase().includes(inputValue.toLowerCase())\n\t);\n};\n\nconst loadOptions = (inputValue, callback) => {\n\tGetTags(base, dbGetTags);\n\tsetTimeout(() => {\n\t\tcallback(getOptions(inputValue));\n\t}, 3000);\n};\n\nfunction GetTags(base, callbackFn) {\n\tvar recordList = [];\n\tbase('Tags').select({\n\t}).eachPage(function page(records, fetchNextPage) {\n\t\trecords.forEach(function(record) {\n\t\t\tlet newRecord = { value: record.id, label: record.get('Name') };\n\t\t\trecordList.push(newRecord);\n\t\t});\n\t\tfetchNextPage();\n\t}, function done(err) {\n\t\tif (err) { console.error(err); return; } else {\n\t\t\tcallbackFn(recordList);\n\t\t}\n\t});\n};\n\nexport { priorities, base, tagList, loadOptions };\n"]},"metadata":{},"sourceType":"module"}